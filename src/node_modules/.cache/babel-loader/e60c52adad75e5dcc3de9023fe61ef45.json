{"ast":null,"code":"import _regeneratorRuntime from \"/home/lsteam/Projects/Spotify-Community-Queue/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lsteam/Projects/Spotify-Community-Queue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lsteam/Projects/Spotify-Community-Queue/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lsteam/Projects/Spotify-Community-Queue/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lsteam/Projects/Spotify-Community-Queue/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lsteam/Projects/Spotify-Community-Queue/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lsteam/Projects/Spotify-Community-Queue/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/lsteam/Projects/Spotify-Community-Queue/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Spotify from 'spotify-web-api-js';\nvar spotifyWebApi = new Spotify();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.getRec =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var song, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                song = e.target.elements.song.value;\n                console.log(\"getting recs...\");\n                _context.next = 5;\n                return spotifyWebApi.getRecommendations({\n                  seed_tracks: [song]\n                });\n\n              case 5:\n                res = _context.sent;\n\n                _this.setState({\n                  recs: res.tracks\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var params = _this.getHashParams();\n\n    _this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        image: ''\n      },\n      recs: []\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n\n    console.log(\"started\");\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getHashParams\",\n    value: function getHashParams() {\n      var hashParams = {};\n      var e,\n          r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n\n      while (e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n      }\n\n      return hashParams;\n    }\n  }, {\n    key: \"getNowPlaying\",\n    value: function getNowPlaying() {\n      var _this2 = this;\n\n      spotifyWebApi.getMyCurrentPlaybackState().then(function (response) {\n        _this2.setState({\n          nowPlaying: {\n            name: response.item.name,\n            image: response.item.album.images[0].url\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://localhost:8888\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Log in With Spotify\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.nowPlaying.image,\n        style: {\n          width: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.getNowPlaying();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Check Now Playing\"), React.createElement(Form, {\n        getRec: this.getRec,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \" Recommended Song: \", this.state.recs[0] && this.state.recs[0].name, \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \" Link : \", this.state.recs[0] && this.state.recs[0].external_urls.spotify, \" \"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/lsteam/Projects/Spotify-Community-Queue/src/App.js"],"names":["React","Component","Form","Spotify","spotifyWebApi","App","getRec","e","preventDefault","song","target","elements","value","console","log","getRecommendations","seed_tracks","res","setState","recs","tracks","params","getHashParams","state","loggedIn","access_token","nowPlaying","name","image","setAccessToken","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","getMyCurrentPlaybackState","then","response","item","album","images","url","width","getNowPlaying","external_urls","spotify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Spotify from 'spotify-web-api-js';\n\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor(){\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true: false,\n      nowPlaying: {\n        name: 'Not Checked',\n        image: ''\n      },\n      recs:  []\n    }\n    if(params.access_token){\n      spotifyWebApi.setAccessToken(params.access_token)\n    }\n\t  console.log(\"started\");\n  }\n  getRec = async (e) => {\n            e.preventDefault();\n            const song = e.target.elements.song.value;\n\t    console.log(\"getting recs...\");\n            const res = await spotifyWebApi.getRecommendations({ seed_tracks: [song] });\n            this.setState({\n                recs: res.tracks\n            });\n    }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n  getNowPlaying(){\n    spotifyWebApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        this.setState({\n          nowPlaying: {\n            name: response.item.name,\n            image: response.item.album.images[0].url\n          }\n        })\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href = 'http://localhost:8888'>\n          <button>Log in With Spotify</button>\n        </a>\n        <div> Now Playing: { this.state.nowPlaying.name}</div> \n        <div>\n          <img src= {this.state.nowPlaying.image } style = {{ width: 100}}/>\n        </div>\n        <button onClick= {()=> this.getNowPlaying()}>\n          Check Now Playing\n        </button>\n\t<Form getRec={this.getRec}/>\n\t<div> Recommended Song: { this.state.recs[0] && this.state.recs[0].name } </div>\n\t<div> Link : { this.state.recs[0] && this.state.recs[0].external_urls.spotify } </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}